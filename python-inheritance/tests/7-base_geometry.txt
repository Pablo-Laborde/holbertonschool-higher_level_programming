>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry



>>> bg = BaseGeometry()

Checks .area output
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

Checks .integer_validator if value = str
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value < 0
>>> bg.integer_validator("name", -1)
Traceback (most recent call last):
ValueError: name must be greater than 0

Checks .integer_validator if value > 0
>>> bg.integer_validator("name", 1)

Checks .integer_validator if value = None
>>> bg.integer_validator("name", None)
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = bool
>>> bg.integer_validator("name", True)
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = tuple
>>> bg.integer_validator("name", ())
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = list
>>> bg.integer_validator("name", [])
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = set
>>> bg.integer_validator("name", {1, 2, 3})
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator empty parameters
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'



>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0



------- Examples that doesn't add checks

Checks .integer_validator if value == 0
>>> bg.integer_validator("name", -1)
Traceback (most recent call last):
ValueError: name must be greater than 0

I Didn't modify the value








Checks .integer_validator if value = nan
>>> bg.integer_validator("name", 'nan')
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = float
>>> bg.integer_validator("name", 9.7)
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = dic
>>> bg.integer_validator("name", {})
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = tuple
>>> bg.integer_validator("name", (1, 2))
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = list
>>> bg.integer_validator("name", [1, 2])
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = complex
>>> bg.integer_validator("name", complex(5, 1))
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = range
>>> bg.integer_validator("name", range)
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = bytearray
>>> bg.integer_validator("name", bytearray())
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = dic
>>> bg.integer_validator("name", {"name": "Jhon", "age": 23})
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = set empty
>>> bg.integer_validator("name", set())
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = frozenset
>>> bg.integer_validator("name", frozenset())
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator 1 missing parameter
>>> bg.integer_validator(4)
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

Checks .area output
>>> bg.area(5)
Traceback (most recent call last):
TypeError: area() takes 1 positional argument but 2 were given

Checks .integer_validator empty parameters
>>> bg.integer_validator("name", 5, 7)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given

Checks .integer_validator if value = int
>>> bg.integer_validator("name", int)
Traceback (most recent call last):
TypeError: name must be an integer

Checks .integer_validator if value = BaseGeometry
>>> bg.integer_validator("name", BaseGeometry())
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator(None, 13)

>>> bg.integer_validator("name", False)
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("width", None)
Traceback (most recent call last):
TypeError: width must be an integer

>>> bg.integer_validator("Height:", int("13"))